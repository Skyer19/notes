{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>This is a library.</p>"},{"location":"about/","title":"About","text":"<p>Hello everyone!</p>"},{"location":"styling-your-docs/","title":"Index","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"styling-your-docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"styling-your-docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"writing-your-docs/","title":"Index","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"writing-your-docs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"writing-your-docs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Finance/L1/","title":"\u57fa\u672c\u91d1\u878d\u77e5\u8bc6","text":"<p>\u91d1\u878d\uff1a\u5bf9\u73b0\u6709\u8d44\u6e90\u8fdb\u884c\u91cd\u65b0\u6574\u5408\u540e\uff0c\u5b9e\u73b0\u4ef7\u503c\u548c\u5229\u6da6\u7684\u7b49\u6548\u6d41\u901a\u3002</p> <p>\u91d1\u878d\u5de5\u5177\uff1a\u5728\u91d1\u878d\u5e02\u573a\u53ef\u4ea4\u6613\u7684\u91d1\u878d\u8d44\u4ea7\uff0c\u5982\uff1a\u80a1\u7968\uff0c\u671f\u8d37\uff0c\u9ec4\u91d1\uff0c\u5916\u6c47\uff0c\u57fa\u91d1\u7b49\u3002</p>"},{"location":"Finance/L1/#_2","title":"\u91d1\u878d\u5de5\u5177","text":"<p>\u80a1\u7968\uff1a\u80a1\u4efd\u516c\u53f8\u53d1\u7ed9\u51fa\u8d44\u4eba\u7684\u4e00\u79cd\u51ed\u8bc1\uff0c\u80a1\u7968\u7684\u51fa\u6e38\u8005\u5c31\u662f\u80a1\u4efd\u516c\u53f8\u7684\u80a1\u4e1c</p>"},{"location":"PDL/lecture1/","title":"About","text":"<p>Hello everyone!</p> <p>For full documentation visit mkdocs.org.</p>"},{"location":"PDL/lecture1/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"PDL/lecture1/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"PDL/lecture2/","title":"Lecture 2 Consensus and Ethereum","text":""},{"location":"PDL/lecture2/#consensus","title":"Consensus","text":""},{"location":"PDL/lecture2/#problem","title":"Problem","text":"<p>We need: a shared, immutable, non-custodial, robust public record of state</p> <p>Soluction:</p> <p>Decentralisation -&gt; ? How can we keep the machines/snodes in sync? -&gt; State Machine Replication Problem</p>"},{"location":"PDL/lecture2/#state-machine-replication-smr","title":"State Machine Replication (SMR)","text":"<p>What is the SMR: A message system supporting fault-tolerance.</p> <p>How to realise: Multiple machines</p> <p>How to keep machines in sync? Replicate servers and coordinating client interactions with server replicas.</p> <p>Determinism:</p> <p>Start from a shared initial state, the same instructions given to each machine should result in the same end state.</p> <p>Some components:</p> <ul> <li>Nodes</li> <li>Clients </li> </ul> <p>How to solve consensus problem?</p> <p>Workout a node with two properities:</p> <ul> <li>Consistency: There is no disagree of the order of the transactions of two nodes</li> <li>Liveness: Any transactions sent by clients to nodes should eventually be added to the local history of each node.</li> </ul>"},{"location":"PDL/lecture2/#consensus-machanism","title":"Consensus Machanism","text":"<p>A mechanism that allows a network of nodes to agree on the state of a blockchain.</p> <p>Consensus Machanism = a sybil resistance machanism(eg: PoW or PoS) + a chain selection machanism + additional economic structure</p>"}]}